generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String      @id @default(uuid())
  name          String
  email         String      @unique
  password      String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  documents     Document[]
  signatures    Signature[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Document {
  id        String     @id @default(uuid())
  name      String
  fileKey   String
  userId    String
  status    String     @default("PENDING")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  mimeType  String?
  size      Int?
  signature Signature?
  user      User       @relation(fields: [userId], references: [id])
}

model Signature {
  id           String    @id @default(uuid())
  documentId   String    @unique
  userId       String
  signatureImg String
  createdAt    DateTime  @default(now())
  signedAt     DateTime?
  document     Document  @relation(fields: [documentId], references: [id])
  user         User      @relation(fields: [userId], references: [id])
}
